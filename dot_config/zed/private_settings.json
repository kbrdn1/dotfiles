// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  // Theme & Appearance
  "theme": "Catppuccin Macchiato Darker (Blur)",
  "icon_theme": "Catppuccin Macchiato",
  "experimental.theme_overrides": {
    "background.appearance": "blurred"
  },

  // Editor Behavior
  "vim_mode": true,
  "base_keymap": "VSCode",
  "enable_experimental_live_diffs": true,
  "tab_size": 2,
  "relative_line_numbers": true,
  "preferred_line_length": 100,
  "soft_wrap": "preferred_line_length",
  "show_whitespaces": "selection",
  "ensure_final_newline_on_save": false,
  "remove_trailing_whitespace_on_save": true,
  "format_on_save": "off",
  "formatter": "prettier",
  "autosave": {
    "after_delay": {
      "milliseconds": 300
    }
  },

  // Font Settings
  // "ui_font_family": "Monaspace Argon Var",
  "ui_font_size": 15,
  "ui_font_features": {
    "liga": true // www
  },
  "ui_font_weight": 300,

  "buffer_font_family": "Monaspace Neon Frozen",
  "buffer_font_size": 14,
  "buffer_font_fallbacks": ["CaskaydiaCove Nerd Font"],
  "buffer_line_height": {
    "custom": 1.4
  },
  // "buffer_font_weight": 300,
  "buffer_font_features": {
    "liga": true, // www /// !! ;;
    "zero": true, // 0
    "cv01": true, // a
    "cv06": true, // i
    "cv27": true, // []
    "cv31": true, // ()
    "ss01": true, // ===
    "ss02": true, // >= <=
    "ss03": true, // <--> <->
    "ss04": true, // </> </ <>
    "ss05": true, // [|  [] /\ |>
    "ss06": true, // ### +++ &&&
    "ss07": true, // -:- =:= ::> :::
    "ss08": true, // ..= ..- ..<
    "ss09": true, // <=> <<= >>=
    "ss10": true, // fi ft
    "ordn": false, // No. 1st 2nd
    "clig": true, // _|_
    "salt": false, // Stylistic Alternates
    "calt": true // Contextual Alternates (fi -> ﬁ)
  },

  // UI Elements
  "tab_bar": {
    "show": true
  },
  "tabs": {
    "close_position": "right",
    "file_icons": true,
    "git_status": true,
    "activate_on_close": "history",
    "show_close_button": "hover",
    "show_diagnostics": "all",
  },
  "toolbar": {
    "selections_menu": true,
    "breadcrumbs": true,
    "quick_actions": true
  },
  "file_finder": {
    "max_modal_width": "xlarge",
    "modal_width": "xlarge"
  },
  "preview_tabs": {
    "enabled": true,
    "enable_preview_from_file_finder": true,
    "enable_preview_from_code_navigation": true
  },
  "project_panel": {
    "dock": "left",
    "entry_spacing": "standard",
    "indent_size": 15,
    "git_status": true,
    "auto_fold_dirs": true,
    "auto_reveal_entries": true,
    "button": true,
    "file_icons": true,
    "folder_icons": true,
    "show_diagnostics": "all",
    "indent_guides": {
      "show": "always"
    }
  },

  // Code Intelligence
  "semantic_index": {
    "enabled": true
  },
  "inlay_hints": {
    "enabled": true,
    "show_other_hints": true,
    "show_parameter_hints": true,
    "show_type_hints": true,
    "scroll_debounce_ms": 50,
    "show_background": false,
    "edit_debounce_ms": 0,
    "toggle_on_modifiers_press": {
      "platform": true
    }
  },
  "diagnostics": {
    "include_warnings": true,
    "inline": {
      "enabled": true,
      "update_debounce_ms": 0,
      "padding": 2,
      "min_column": 0,
      "max_severity": null
    },
    "update_with_cursor": true,
    "use_rendered": true
  },
  "indent_guides": {
    "enabled": true,
    "coloring": "indent_aware",
    "indent_size": 2,
    "background_coloring": "disabled",
    "line_width": 1,
    "active_line_width": 2
  },

  // AI Assistance
  "assistant": {
    "default_model": {
      "provider": "anthropic",
      "model": "claude-3-7-sonnet-latest"
    },
    "version": "2"
  },
  "edit_predictions": {
    "disabled_globs": [],
    "mode": "subtle",
    "copilot": {
      "proxy": null,
      "proxy_no_verify": null
    },
    "enabled_in_assistant": true
  },
  "show_edit_predictions": true,
  "features": {
    "edit_prediction_provider": "copilot"
  },

  // File Handling
  "file_types": {
    "Dockerfile": ["Dockerfile", "Dockerfile.*"],
    "JSON": ["json", "jsonc", "*.code-snippets"],
    "Shell Script": ["sh", "bash", "zsh", "fish", "ksh", "csh", "tcsh", "sh.*", "bash.*", "zsh.*", "fish.*", "ksh.*", "csh.*", "tcsh.*"] 
  },
  "file_scan_exclusions": [
    "**/.git",
    "**/.svn",
    "**/.hg",
    "**/CVS",
    "**/.DS_Store",
    "**/Thumbs.db",
    "**/.classpath",
    "**/.settings",
    // above is default from Zed
    "**/node_modules",
    "**/dist",
    "**/.idea",
    "**/.vscode",
    "**/__pycache__",
    "**/.__mocks__",
    "**/out",
    "**/.husky",
    "**/.turbo",
    "**/.vscode-test",
    "**/.next",
    "**/.nuxt",
    "**/.storybook",
    "**/.tap",
    "**/.nyc_output",
    "**/report"
  ],

  // Git Integration
  "git": {
    "git_gutter": "tracked_files",
    "hunk_style": "staged_hollow",
    "inline_blame": {
      "enabled": true,
      "min_column": 100,
      "show_commit_summary": true,
      "delay_ms": 0
    },
    "gutter_debounce": 0
  },

  // Language & LSP Settings
  "use_smartcase_search": true,
  "lsp": {
    "discord_presence": {
      "initialization_options": {
        // application id for the rich presence (required, keep it if you don't know what you're doing)
        "application_id": "1263505205522337886",
        // Base url for all language icons
        "base_icons_url": "https://raw.githubusercontent.com/xhyrom/zed-discord-presence/main/assets/icons/",

        "state": "Working on {filename}",
        "details": "In {workspace}",
        // URL for large image
        "large_image": "{base_icons_url}/{language}.png",
        "large_text": "{language:u}", // :u makes first letter upper-case
        // URL for small image
        "small_image": "{base_icons_url}/zed.png",
        "small_text": "Zed",

        // Rules - disable presence in some workspaces
        "rules": {
          "mode": "blacklist", // or whitelist
          "paths": ["absolute path"]
        },

        "git_integration": true
      },
      "enabled": true
    },
    "eslint": {
      "settings": {
        "codeActionOnSave": {
          "rules": ["import/order"]
        }
      },
      "initialization_options": {
        "autoFix": true,
        "format": true
      }
    },
    "rust-analyzer": {
      "initialization_options": {
        "check": {
          "command": "clippy" // rust-analyzer.check.command (default: "check")
        }
      }
    },
    "typescript-language-server": {
      "initialization_options": {
        "preferences": {
          "includeInlayParameterNameHints": "all",
          "includeInlayParameterNameHintsWhenArgumentMatchesName": false,
          "includeInlayFunctionParameterTypeHints": true,
          "includeInlayVariableTypeHints": true,
          "includeInlayVariableTypeHintsWhenTypeMatchesName": false,
          "includeInlayPropertyDeclarationTypeHints": true,
          "includeInlayFunctionLikeReturnTypeHints": true,
          "includeInlayEnumMemberValueHints": true
        }
      }
    }
  },
  "languages": {
    "Rust": {
      "formatter": {
        "external": {
          "command": "rustfmt",
          "arguments": ["--emit=stdout"]
        }
      }
    },
    "Python": {
      "formatter": {
        "external": {
          "command": "black",
          "arguments": ["-"]
        }
      }
    },
    "Markdown": {
      "formatter": {
        "external": {
          "command": "prettier",
          "arguments": ["--stdin-filepath", "{buffer_path}"]
        }
      }
    },
    "JSON": {
      "formatter": {
        "external": {
          "command": "prettier",
          "arguments": ["--stdin-filepath", "{buffer_path}"]
        }
      },
      "code_actions_on_format": {
        "source.fixAll": true
      }
    },
    "PHP": {
      "language_servers": ["intelephense", "!phpactor", "..."],
      "code_actions_on_format": {
        "source.fixAll": true,
        "source.organizeImports": true
      }
    },
    "TypeScript": {
      "formatter": {
        "external": {
          "command": "prettier",
          "arguments": ["--stdin-filepath", "{buffer_path}"]
        }
      },
      "code_actions_on_format": {
        "source.organizeImports": true,
        "source.fixAll": true
      }
    },
    "TSX": {
      "formatter": {
        "external": {
          "command": "prettier",
          "arguments": ["--stdin-filepath", "{buffer_path}"]
        }
      },
      "code_actions_on_format": {
        "source.organizeImports": true,
        "source.fixAll": true
      }
    },
    "JavaScript": {
      "formatter": {
        "external": {
          "command": "prettier",
          "arguments": ["--stdin-filepath", "{buffer_path}"]
        }
      },
      "code_actions_on_format": {
        "source.fixAll.eslint": true,
        "source.organizeImports": true
      }
    }
  },

  // Terminal Settings
  "terminal": {
    "copy_on_select": true,
    "detect_venv": {
      "on": {
        "directories": [".env", ".venv", "venv", "env", "envs"],
        "activate_script": "default"
      }
    },
    "blinking": "on",
    // "font_family": "CaskaydiaCove Nerd Font",
    "font_family": "Monaspace Neon Frozen",
    "font_fallbacks": ["CaskaydiaCove Nerd Font"],
    "font_size": 14,
    // "font_weight": 300,
    "line_height": {
      "custom": 1.2
    },
    "font_features": {
      "liga": true, // www /// !! ;;
      "zero": true, // 0
      "cv01": true, // a
      "cv06": true, // i
      "cv27": true, // []
      "CV31": true, // ()
      "ss01": true, // ===
      "ss02": true, // >= <=
      "ss03": true, // <--> <->
      "ss04": true, // </> </ <>
      "ss05": true, // [|  [] /\ |>
      "ss06": true, // ### +++ &&&
      "ss07": true, // -:- =:= ::> :::
      "ss08": true, // ..= ..- ..<
      "ss09": true, // <=> <<= >>=
      "ss10": true, // fi ft
      "ordn": false, // No. 1st 2nd
      "clig": true, // _|_
      "salt": false, // Stylistic Alternates
      "calt": true // Contextual Alternates (fi -> ﬁ)
    },
    "shell": {
      "program": "zsh"
    },
    "toolbar": {
      "breadcrumbs": true
    },
    "working_directory": "current_project_directory",
    "button": true
  },

  // Other Settings
  "journal": {
    "path": "~",
    "hour_format": "hour24"
  },
  "jupyter": {
    "kernel_selections": {
      "typescript": "deno",
      "javascript": "deno"
    }
  }
}